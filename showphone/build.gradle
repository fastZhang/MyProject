apply plugin: 'com.android.application'


def rootEXT = rootProject.ext



android {
    compileSdkVersion compileSdkVersionInt



    defaultConfig {
        applicationId "com.funny.call.prank.you"

        minSdkVersion rootEXT.minSdkVersionInt
        targetSdkVersion targetSdkVersion

        versionCode 6
        versionName "1.13"

//        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "x86"
//        }

//        ndk {
//            //根据需要 自行选择添加的对应cpu类型的.so库。
//            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a'
//            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
//        }


        flavorDimensions "default"//这个名字貌似随便取，也可以有多个，总之一定要有..


    }



    productFlavors {


        mi {

            minSdkVersion 21
            targetSdkVersion 24

            dimension "default"

        }
        gp {
            dimension "default"

        }
    }

    productFlavors.all { flavor ->
        manifestPlaceholders = [
                //AML912VK4XNY 属于应用"fackcall"独有的 Android AppKey, 用于配置SDK
                MTA_APPKEY : "AT8V16KPV9NK",
                //标注应用推广渠道用以区分新用户来源，可填写如应用宝，豌豆荚等
                MTA_CHANNEL: flavor.name
        ]


        productFlavors.findAll {
            productFlavor ->
                buildConfigField("String", productFlavor.name, "\"${productFlavor.name}\"")

        }


    }

//    各版本so
//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a' //select ABIs to build APKs for
//            universalApk true //generate an additional APK that contains all the ABIs
//        }
//    }
//    // map for the version code
//    project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'arm64-v8a': 3, 'mips': 5, 'mips64': 6, 'x86': 8, 'x86_64': 9]
//    android.applicationVariants.all { variant ->
//        // assign different version code for each output
//        variant.outputs.each { output ->
//            output.versionCodeOverride =
//                    project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) * 1000000 + android.defaultConfig.versionCode
//        }
//    }


    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
//    api files('libs/u3ksdk.jar')

    implementation appcompat_v7
    implementation cardview_v7
    implementation recyclerview_v7
    annotationProcessor rootEXT.butterknife_compiler
    implementation rootEXT.butterknife
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation permission
    implementation glide
    implementation project(':wqgallery:photogallery')
    implementation project(':HelloDaemon:hellodaemon')
    implementation play_services_ads
    implementation 'com.qq.mta:mta:3.4.7-release'
    implementation 'com.tencent.mid:mid:4.06-release'
    implementation 'com.nineoldandroids:library:2.4.0'

    implementation 'com.umeng.sdk:common:1.5.0'
    implementation 'com.umeng.sdk:analytics:7.5.0'
}

